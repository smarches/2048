$main-fonts: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
$score-fonts: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
$tile-fonts: Arial, Helvetica, sans-serif;

$tile-stroke: 2px;
$tile-bold-stroke: 3px;

$slider-dim: 25px;

$roundSwitchDim: 26px;

%hcenter {
    margin-left: auto;
    margin-right: auto;
}

%switchTransition {
    display: block;
    margin: auto;
    transition: all 0.33s ease;
}

.tile_grid, .fg_tile, .tile_bg {
    stroke-width: $tile-stroke;
}

.bg_tile, .new_tile {
    stroke-width: $tile-bold-stroke;
}

.tile_num {
    font-weight: 700;
    text-anchor: middle;
    font-family: $tile-fonts;
    dominant-baseline: middle;
}

.hidden {
    display: none;
}

#main { 
    @extend %hcenter;
    max-width:1200px;
    background-color: honeydew;
}

.gamebox {
    @extend %hcenter;
    display: block;
    border: 3px solid;
    border-radius: 5%;
    background-color:#96a696;
}

/* title */
#game-title {
    padding-top: 1.5rem;
    margin-top:0;
    font-size: 3em;
    text-align: center;
    color: #5B4F4A;
    font-family: $main-fonts;
}

.score_font {
    // font-size: 2rem;
    font-family: $score-fonts;
}

#board {
    border-radius: 20px 12px;
    padding-bottom: 2em;
    min-height: 10rem;
}

#ctrl {
    width: 100%;
    min-width: 200px;
    margin: auto;
}

/* 'background pill-shaped part of switch 
 * also note behavior of border-radius: when just one is supplied
 * then it stops rounding off after the smaller of width or height is completely circular
 * so here, all values >= 44px are equivalent
 */
.lbl {
    @extend %switchTransition;
    position: relative;
    width: 44px;
    height: 20px;
    background-color: #FDAA48;
    border-radius: 44px;
    cursor: pointer;
}

/* 
 * round part of switch 
 * note that since 'after' is a pseudo-element, not a pseudo-class (like :hover, :visited),
 * it should be preceded with two colons, ::after (CSS3) though browers will accept :after for
 * backwards compatibility
 */
.lbl::after {
    @extend %switchTransition;
    position: absolute;
    left: -2px;
    top: -3px;
    width: $roundSwitchDim;
    height: $roundSwitchDim;
    border-radius: $roundSwitchDim;
    background: #5E3B07;
    box-shadow: 0px 3px 3px rgba(128,0,38,0.05);
    content: '';
}

/* squish effect */
.lbl:active::after {
    transform: scale(1.15, 0.85);
}

/* ~ is the 'general sibling combinator' so a label following a .cbx:checked 
 *  which creates the need to put the <label> after the <input>
 */
.cbx:checked ~ label {
    background-color: #1FA187;
}

.cbx:checked ~ label::after {
    left: 20px;
    background-color: #3F4889;
}

.cbx:disabled ~ label {
    background-color: #d5d5d5;
    pointer-events: none;
}

.slidylabel {
    display: inline-block;
    width: 5em;
    text-align: right;
}

/* slider skin - nice tutorial at 
 * https://www.w3schools.com/howto/howto_js_rangeslider.asp
 */
.slidy { 
    -webkit-appearance: none;
    appearance: none;
    display: inline-block;
    /* relative to bounding container */
    width: 53% ;
    height: 10px;
    background-color: #c2c2c2;
    border-radius: 10%;
    outline: none;
    /* Set transparency (for mouse-over effects on hover) */
    opacity: 0.7 ;
    -webkit-transition: .2s;
    transition: opacity .2s;
}

%sliderShape {
    width: $slider-dim;
    height: $slider-dim;
    border-radius: 50%;
    background-color: #4CAF50;
    cursor: grab;
}

.slidy:hover {
    opacity:1
}

.slider::-webkit-slider-thumb { 
    @extend %sliderShape;
    -webkit-appearance: none;
    appearance: none;
}
    
.slider::-moz-range-thumb {
    @extend %sliderShape;
}

.btn {
    text-decoration: none;
    /* padding: 0.5em 1em */
    display: block;
    margin: auto;
    width: 100%;
    height: 100%;
    color: #bebdbd;
    font-weight: 600;
    font-size: 1.25rem;
    background-color: #343434;
    border: 0.2rem solid #999;
    border-radius: 5px;
}

input[type='button']:hover {
    background-color: #232323;
    border-color: #cdcdcd;
    color: #cdcdcd;
}

$grid-radius: 0.33rem;
.gird {
    display: grid;
    /* each of middle 2 cols is between specified em: */
    grid-template-columns: auto minmax(5rem,8rem) minmax(12rem, 16rem) minmax(5rem,8rem) auto;
    gap: 1rem;
    /* coordinated with display:flex in children! */
    flex: 1;
}

.gird1 {
    grid-column: 3 / 4;
    grid-row: 1;
    background-color: #4CAF50;
    border-radius: $grid-radius;
}

.gird2 {
    grid-column: 2 / 3;
    grid-row: 1;
    background-color: #819289;
    display: flex;
    align-items: center;
    border-radius: $grid-radius;
}

.gird3 {
    grid-column: 4 / 5;
    grid-row: 1;
    background-color: #927f95;
    display: flex;
    align-items: center;
    border-radius: $grid-radius;
}

.rgird {
    display: grid;
    gap: $grid-radius;
    padding: $grid-radius;
    grid-template-rows: 1fr 1fr;
}

.rgird1 { 
    grid-row: 1;
}

.rgird2 {
    grid-row: 2;
}

/* stack the inputs on narrow (mobile) screen 
 * note, max-width applies up to the given value
 * and also that styles get overridden by javascript
 */
@media ( max-width: 35rem ) {
    body {
        background-color: #558812;
    }
    .gird {
        display: grid;
        grid-template-columns: 1fr 8fr 1fr; /* basically switch to Bootstrap style column layout */
        column-gap: 0;
        row-gap: 0.67rem;
    }
    .gird1 {
        grid-column: 2; 
        grid-row: 1;
    }
    .gird2 {  
        grid-column: 2; 
        grid-row: 2;
    }
    .gird3 {  
        grid-column: 2; 
        grid-row: 3;
    }
}
