/* static styling for 2048 */

#main {
    margin-left: auto;
    margin-right: auto;
    max-width: 1200px;
    background-color: honeydew;
}

/* title */
#bukk {
    font-size: 3em;
    text-align: center;
    color: '#5B4F4A';
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
}

#board {
    /* display:inline; */
    border-radius: 20px 12px;
    padding-bottom: 2em;
}

input[type='button'] {
    text-decoration: none;
    padding: 0.5em 1em;
    display: block;
    margin:auto;
    color: #ababab;
    font-weight: 600;
    background-color: #343434;
    border: 1px solid #999;
    border-radius: 5px;
}

input[type='button']:hover {
    background-color: #232323;
    border-color: #cdcdcd;
    color: #cdcdcd;
}

.gird {
    display:grid;
    /* grid-template-columns: repeat(4,1fr); */
    /* each of middle 2 cols is between specified em: */
    grid-template-columns: auto minmax(10em,20em) repeat(2,minmax(5em,10em)) auto;
    grid-gap: 1em;
    flex: 1; /* coordinated with display:flex in children! */
}

.gird1 {
    grid-column: 2 / 3;
    grid-row: 1;
    background-color: #4CAF50;
}

.gird2 {
    grid-column: 3 / 4;
    grid-row: 1;
    background-color: #3F4889;
    display: flex;
    align-items: center;
    background-image: url('./media/animal-crab-creature-76966.jpg');
    background-origin: border-box;
    background-size: 100%;
}

.gird3 {
    grid-column: 4 / 5;
    grid-row: 1;
    background-color: #7F4889;
    display: flex;
    align-items: center;
}

.rgird {
    display: grid;
    grid-gap: 0.33em;
    padding: 0.33em;
    grid-template-rows: 1fr 1fr;
}

.rgird1 {
    grid-row: 1;
}

.rgird2 {
    grid-row: 2;
}

/* stack the inputs on narrow (mobile) screen 
 * note, max-width applies up to the given value
 * and also that styles get overridden by javascript
 */
@media ( max-width: 35rem ) {
    body {
        background-color: #558812;
    }
    .gird {
        display: grid;
        grid-template-columns: 1fr 8fr 1fr; /* basically switch to Bootstrap style column layout */
        grid-column-gap: 0;
        grid-row-gap: 0.67rem;
    }
    .gird1 { grid-column: 2; grid-row:1}
    .gird2 { grid-column: 2; grid-row:2}
    .gird3 { grid-column: 2; grid-row:3}
}

.gamebox {
    display:block;
    margin-left: auto;
    margin-right: auto;
    border: 3px solid;
    border-radius: 5%;
}

/* bounding box of tile grid */
.tile_bg {
    stroke-width: 2px;
}

/* grid lines of tile grid */
.tile_grid {
    stroke-width: 2px;
}

#ctrl {
    width: 100%;
    min-width: 200px;
    margin: auto;
}

.slidylabel {
    display: inline-block;
    width: 5em;
    text-align: right;
}
/* slider skin - nice tutorial at 
 * https://www.w3schools.com/howto/howto_js_rangeslider.asp
 */
.slidy {
    -webkit-appearance: none;  /* Override default CSS styles */
    appearance: none;
    display:inline-block;
    width: 33%; /* relative to bounding container */
    height: 0.5em; /* Specified height */
    background: #c2c2c2;
    border-radius: 10%;
    outline: none; /* Remove outline */
    opacity: 0.7; /* Set transparency (for mouse-over effects on hover) */
    -webkit-transition: .2s; /* 0.2 seconds transition on hover */
    transition: opacity .2s;
}

.slidy:hover {
    opacity:1;
}

.slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 25px;
    height: 25px;
    border-radius: 50%; 
    background-color: #4CAF50;
    cursor: grab;
  }
  
  .slider::-moz-range-thumb {
    width: 25px;
    height: 25px;
    border-radius: 50%;
    background-color: #4CAF50;
    cursor: grab;
  }

.tile_num {
    font-weight: 700;
    text-anchor: middle;
    font-family: Arial, Helvetica, sans-serif;
    dominant-baseline: middle;
}

.bg_tile {
    stroke-width: 3px;
}

.fg_tile {
    stroke-width: 2px;
}

.new_tile {
    stroke-width: 3px;
}

.score_font {
    font-size: 2rem;
    font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
}

/* material switch themed checkbox */
.hidden { display: none; }

/* 'background pill-shaped part of switch 
 * also note behavior of border-radius: when just one is supplied
 * then it stops rounding off after the smaller of width or height is completely circular
 * so here, all values >= 44px are equivalent
 */
.lbl {
    position: relative;
    display: block;
    margin: auto; /* horizontally align center */
    width: 44px;
    height: 20px;
    background: #FDAA48;
    border-radius: 44px;
    cursor: pointer;
    transition: all 0.33s ease;
}

/* 
 * round part of switch 
 * note that since 'after' is a pseudo-element, not a pseudo-class (like :hover, :visited),
 * it should be preceded with two colons, ::after (CSS3) though browers will accept :after for
 * backwards compatibility
 */
.lbl::after {
    position: absolute;
    left: -2px;
    top: -3px;
    display: block;
    width: 26px;
    height: 26px;
    border-radius: 26px;
    background: #5E3B07;
    box-shadow: 0px 3px 3px rgba(128,0,38,0.05);
    content: '';
    transition: all 0.33s ease;
}

/* squish effect */
.lbl:active::after { transform: scale(1.15, 0.85); }

/* ~ is the 'general sibling combinator' so a label following a .cbx:checked 
    which creates the need to put the <label> after the <input>
*/
.cbx:checked ~ label { background: #1FA187; }
.cbx:checked ~ label::after {
    left: 20px;
    background: #3F4889;
}

.cbx:disabled ~ label {
    background: #d5d5d5;
    pointer-events: none;
}